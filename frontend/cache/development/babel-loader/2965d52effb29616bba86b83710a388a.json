{"ast":null,"code":"import { USER_STATE_CHANGE, USER_POSTS_STATE_CHANGE, USER_FOLLOWING_STATE_CHANGE, USERS_DATA_STATE_CHANGE, USERS_POSTS_STATE_CHANGE, USERS_LIKES_STATE_CHANGE, CLEAR_DATA } from \"../constants/index\";\nimport firebase from 'firebase';\nexport function fetchUser() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        dispatch({\n          type: USER_STATE_CHANGE,\n          currentUser: snapshot.data()\n        });\n      } else {\n        console.log('does not exist');\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/dev_v/Desktop/INSTAGRAM/clone/components/redux/actions/index.js"],"names":["USER_STATE_CHANGE","USER_POSTS_STATE_CHANGE","USER_FOLLOWING_STATE_CHANGE","USERS_DATA_STATE_CHANGE","USERS_POSTS_STATE_CHANGE","USERS_LIKES_STATE_CHANGE","CLEAR_DATA","firebase","fetchUser","dispatch","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","exists","type","data","console","log"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,uBAA5B,EAAqDC,2BAArD,EAAkFC,uBAAlF,EAA0GC,wBAA1G,EAAoIC,wBAApI,EAA8JC,UAA9J;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,SAAQ,UAACC,QAAD,EAAc;AAClBF,IAAAA,QAAQ,CAACG,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESL,QAAQ,CAACM,IAAT,GAAgBC,WAAhB,CAA4BC,GAFrC,EAGKC,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;AAChB,UAAIA,QAAQ,CAACC,MAAb,EAAqB;AACjBV,QAAAA,QAAQ,CAAC;AAAEW,UAAAA,IAAI,EAAEpB,iBAAR;AAA2Bc,UAAAA,WAAW,EAAEI,QAAQ,CAACG,IAAT;AAAxC,SAAD,CAAR;AACH,OAFD,MAGK;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,KAXL;AAYH,GAbD;AAcH","sourcesContent":["import { USER_STATE_CHANGE, USER_POSTS_STATE_CHANGE, USER_FOLLOWING_STATE_CHANGE, USERS_DATA_STATE_CHANGE,USERS_POSTS_STATE_CHANGE, USERS_LIKES_STATE_CHANGE, CLEAR_DATA} from '../constants/index'\r\nimport firebase from 'firebase'\r\n\r\nexport function fetchUser() {\r\n    return ((dispatch) => {\r\n        firebase.firestore()\r\n            .collection(\"users\")\r\n            .doc(firebase.auth().currentUser.uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n                if (snapshot.exists) {\r\n                    dispatch({ type: USER_STATE_CHANGE, currentUser: snapshot.data() })\r\n                }\r\n                else {\r\n                    console.log('does not exist')\r\n                }\r\n            })\r\n    })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}