{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dev_v\\\\Desktop\\\\INSTAGRAM\\\\clone\\\\components\\\\main\\\\Save.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\nimport { NavigationContainer } from '@react-navigation/native';\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nexport default function Save(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      caption = _useState2[0],\n      setCaption = _useState2[1];\n\n  var uploadImage = function uploadImage() {\n    var uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = props.route.params.image;\n            childPath = \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            console.log(childPath);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 8:\n            blob = _context.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                savePostData(snapshot);\n                console.log(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePostData = function savePostData(downloadURL) {\n    firebase.firestore().collection('posts').doc(firebase.auth().currentUser.uid).collection(\"userPosts\").add({\n      downloadURL: downloadURL,\n      caption: caption,\n      likesCount: 0,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      props.navigation.popToTop();\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.route.params.image\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Aggiungi testo . . .\",\n    onChangeText: function onChangeText(caption) {\n      return setCaption(caption);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Save\",\n    onPress: function onPress() {\n      return uploadImage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/dev_v/Desktop/INSTAGRAM/clone/components/main/Save.js"],"names":["React","useState","firebase","NavigationContainer","require","Save","props","caption","setCaption","uploadImage","uri","route","params","image","childPath","auth","currentUser","uid","Math","random","toString","console","log","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","then","savePostData","taskError","on","downloadURL","firestore","collection","doc","add","likesCount","creation","FieldValue","serverTimestamp","navigation","popToTop","flex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, TextInput, Image, Button } from 'react-native'\r\n\r\nimport firebase from 'firebase'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\n\r\n\r\nrequire(\"firebase/firestore\")\r\nrequire(\"firebase/firebase-storage\")\r\n\r\n\r\nexport default function Save(props) {\r\n    \r\n    const [caption, setCaption] = useState(\"\")\r\n\r\n    const uploadImage = async () => {\r\n\r\n        const uri = props.route.params.image;\r\n        const childPath = `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`;\r\n        console.log(childPath)\r\n\r\n        const response = await fetch(uri);\r\n        const blob = await response.blob();\r\n\r\n        const task = firebase\r\n            .storage()\r\n            .ref()\r\n            .child(childPath)\r\n            .put(blob);\r\n\r\n        const taskProgress = snapshot => {\r\n            console.log(`transferred: ${snapshot.bytesTransferred}`)\r\n        }\r\n\r\n        const taskCompleted = () => {\r\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\r\n                savePostData(snapshot);\r\n                console.log(snapshot)\r\n            })\r\n        }\r\n\r\n        const taskError = snapshot => {\r\n            console.log(snapshot)\r\n        }\r\n\r\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\r\n    }\r\n\r\n    const savePostData = (downloadURL) => {\r\n\r\n        firebase.firestore()\r\n            .collection('posts')\r\n            .doc(firebase.auth().currentUser.uid)\r\n            .collection(\"userPosts\")\r\n            .add({\r\n                downloadURL,\r\n                caption,\r\n                likesCount: 0,\r\n                creation: firebase.firestore.FieldValue.serverTimestamp()\r\n            }).then((function () {\r\n                props.navigation.popToTop()\r\n            }))\r\n    }\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Image source={{ uri: props.route.params.image }} />\r\n            <TextInput\r\n                placeholder=\"Aggiungi testo . . .\"\r\n                onChangeText={(caption) => setCaption(caption)}\r\n            />\r\n\r\n            <Button title=\"Save\" onPress={() => uploadImage()} />\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}