{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dev_v\\\\Desktop\\\\INSTAGRAM\\\\clone\\\\components\\\\main\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport firebase from \"firebase\";\n\nrequire(\"firestore\");\n\nexport default function Search() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setusers = _useState2[1];\n\n  var fetchUsers = function fetchUsers(search) {\n    firebase.firestore().collection(\"users\").where(\"name\", \">=\", search).get().then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setusers(users);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    onChange: function onChange(search) {\n      return fetchUsers(search);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, item.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/dev_v/Desktop/INSTAGRAM/clone/components/main/Search.js"],"names":["React","useState","firebase","require","Search","users","setusers","fetchUsers","search","firestore","collection","where","get","then","snapshot","docs","map","doc","data","id","item","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,WAAD,CAAP;;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAAA,kBACFH,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,MACrBI,KADqB;AAAA,MACdC,QADc;;AAG5B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC3BN,IAAAA,QAAQ,CAACO,SAAT,GACCC,UADD,CACY,OADZ,EAECC,KAFD,CAEO,MAFP,EAEe,IAFf,EAEqBH,MAFrB,EAGCI,GAHD,GAICC,IAJD,CAIM,UAACC,QAAD,EAAc;AAChB,UAAIT,KAAK,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG,EAAI;AACjC,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,YAAMC,EAAE,GAAGF,GAAG,CAACE,EAAf;AACA;AAAQA,UAAAA,EAAE,EAAFA;AAAR,WAAeD,IAAf;AACH,OAJW,CAAZ;AAKAZ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAXD;AAaH,GAdD;;AAgBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAE,kBAACG,MAAD;AAAA,aAAWD,UAAU,CAACC,MAAD,CAArB;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEG,oBAAC,QAAD;AACA,IAAA,UAAU,EAAE,CADZ;AAEA,IAAA,UAAU,EAAE,KAFZ;AAGA,IAAA,IAAI,EAAEH,KAHN;AAIA,IAAA,UAAU,EAAE;AAAA,UAAEe,IAAF,QAAEA,IAAF;AAAA,aACP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAI,CAACC,IAAZ,CADO;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADJ;AAeH","sourcesContent":["import React,{useState} from \"react\"\r\nimport {View,Text, TextInput, FlatList } from \"react-native\"\r\n\r\nimport firebase from \"firebase\"\r\nrequire(\"firestore\")\r\n\r\nexport default function Search(){\r\n    const [users, setusers] = useState([])\r\n    \r\n    const fetchUsers = (search) => {\r\n        firebase.firestore()\r\n        .collection(\"users\")\r\n        .where(\"name\", \">=\", search)\r\n        .get()\r\n        .then((snapshot) => {\r\n            let users = snapshot.docs.map(doc => {\r\n                const data = doc.data();\r\n                const id = doc.id;\r\n                return {id, ...data}\r\n            });\r\n            setusers(users)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <TextInput onChange={(search)=> fetchUsers(search)}/>\r\n           <FlatList\r\n           numColumns={1}\r\n           horizontal={false}\r\n           data={users}\r\n           renderItem={({item})=> (\r\n                <Text>{item.name}</Text>\r\n\r\n           )}\r\n           \r\n           />\r\n        </View>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}